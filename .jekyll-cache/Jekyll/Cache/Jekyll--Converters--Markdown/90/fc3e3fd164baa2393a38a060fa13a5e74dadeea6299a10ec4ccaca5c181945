I"1<h1 id="servlet-이란">Servlet 이란?</h1>
<p>서블릿의 만드는 목적은 클라이언트에 서비스 하기 위해서 이다.<br />
그렇다면 서버에 서블릿이 준비되어 있어야 하는데 어떻게 준비를 할 수 있을까?<br /><br /></p>

<h1 id="웹-어플리케이션-접근">웹 어플리케이션 접근</h1>
<p>서블릿은 웹서버에서 서비스되는 페이지이다.<br />
그래서 서블릿을 개발하였으면, 해당 서블릿 실행 파일을 웹 서버에 올려두어야 한다.<br />
그렇다면 위치는 어디이며, 클라이언트는 어떻게 서블릿에 접근하는가?<br /><br /></p>

<h2 id="클라이언트">클라이언트</h2>
<p>클라이언트는 웹서버에 서비스 요청할 때, URL 정보를 보낸다.<br />
클라이언트가 요청한 문서를 찾아가고자 URL 정보를 활용하는데, URL 정보의 뜻은 다음과 같다.</p>

<blockquote>
  <p><strong>http://127.0.0.1:8080</strong>/firstweb/HelloServlet</p>
</blockquote>

<p>이라고 나타내는 URL이 있으면, <strong>[8080]</strong>까지는 웹서버의 포트와 아이피 그 뒤에 <strong>[firstweb]</strong>은 웹 어플리케이션을 뜻하며, <strong>[HelloServlet]</strong>은 클라이언트가 요청한 최종 문서정보이다.<br /><br /></p>

<h2 id="웹-어플리케이션">웹 어플리케이션</h2>
<p>서비스는 서버에서 어플리케이션 단위로 이루어진다.<br />
웹서버마다 시작될 때 자동으로 어플리케이션으로 인식하여 서비스를 올려주는 디렉터리가 존재하는데,<br />
아파치 톰캣은 톰캣이 설치한 디렉터리 하위의 <strong>[webapps]</strong> 디렉터리에 있는 하위 디렉터리 또는 <br />
<strong>[war]</strong> 파일을 하나의 어플리케이션으로 인식한다.<br /><br /></p>

<h3 id="웹-어플리케이션-구조">웹 어플리케이션 구조</h3>
<p>반드시 모든 웹 어플리케이션이 공통으로 가져야 하는 디렉터리와 파일이 존재한다.</p>

<ul>
  <li>
    <p>WEB-INF 디렉토리<br />
  웹 어플리케이션에서 서비스 하려는 클래스 파일이 있다면,<br />
  <strong>[WEB-INF/classes]</strong> 클래스 파일들이 <strong>jar</strong>로 압축되어 있다면 <strong>[WEB-INF/lib]</strong>에 존재해야한다. 
  이는, <strong>[WAS]</strong>를 구성하는 어플리케이션 서버들이 자동으로 인식하게끔 하기위함이다.</p>
  </li>
  <li>
    <p>web.xml<br />
  <strong>web.xml</strong>은 <strong>[WEB-INF]</strong> 안에 있어야 한다.<br /><br /></p>
  </li>
</ul>

<h3 id="서블릿-구현">서블릿 구현</h3>
<p>서블릿 클래스 간의 관계</p>
<ul>
  <li>서블릿을 구현할 때 반드시 상속해야되는 클래스가 존재 (<strong>HttpServlet</strong>)</li>
  <li>웹상에서 클라이언트 요청이 있을 때 해당 서블릿 실행하는 조건들이 포함되어있음.<br /><br /></li>
</ul>

<p><strong>HttpServlet</strong>은 <strong>GenericServlet</strong>을 상속받고, <br />
<strong>Seralizable</strong>, <strong>Servlet</strong>, <strong>ServletConfig</strong> 클래스를 상속받고 있다.<br /></p>
<hr />

<p><br />
다음 포스트는 Servlet의 기초 사용방법을 알아보자 :)<br />
최종적으로는 Sevlet/JSP로 꽤 쓸만한 웹 브라우저를 만드려고 한다.</p>
:ET